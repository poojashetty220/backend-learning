{
  "openapi": "3.0.3",
  "info": {
    "title": "Category API",
    "description": "API for managing categories",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://28ztpnjp9j.execute-api.ap-south-1.amazonaws.com/dev",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/categories": {
      "get": {
        "summary": "Get all categories",
        "description": "Retrieves a list of all categories with optional filtering and pagination.",
        "tags": ["Categories"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Search term for filtering categories by name"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "example": "active",
              "enum": ["active", "inactive"]
            },
            "description": "Search term for filtering categories by name"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "description": "Number of categories to return"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            },
            "description": "Number of categories to skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new category",
        "description": "Creates a new category with the provided data.",
        "tags": ["Categories"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "6884da289d564917a54fe54f"
          },
          "name": {
            "type": "string",
            "example": "Technology"
          }
        },
        "required": ["_id", "name"]
      },
      "CategoryInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Electronics"
          }
        },
        "required": ["name"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Something went wrong"
          }
        }
      }
    }
  }
}
